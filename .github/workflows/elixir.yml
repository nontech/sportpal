# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PWD }}
          POSTGRES_DB: localhost
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      with:
        elixir-version: '1.12.2' # [Required] Define the Elixir version
        otp-version: '24.0'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/backend/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      working-directory: ./backend
      run: mix deps.get
      
      # Assuming this step comes after the PostgreSQL service setup and environment variable configuration
    - name: Run Phoenix Database Setup
      working-directory: ./backend
      run: mix ecto.setup

    - name: Run tests
      working-directory: ./backend
      run: mix test
